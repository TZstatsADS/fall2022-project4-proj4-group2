{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b0e7980d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import copy\n",
    "import itertools\n",
    "import math\n",
    "import numpy as np\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn.metrics import log_loss\n",
    "from scipy import optimize\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.utils import shuffle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1d80567f",
   "metadata": {},
   "outputs": [],
   "source": [
    "compas = pd.read_csv('/Users/lsx/Desktop/Fall2021-Project4-group5-main/data/compas-scores-two-years.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "415c2cb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def processing_compas(compas): \n",
    "    #drop Missing values\n",
    "    compas.dropna()\n",
    "    compas_subset = compas[[\"sex\",\"age\",\"age_cat\",\"race\",\"priors_count\",\"c_charge_degree\",\"c_jail_in\", \"c_jail_out\",'two_year_recid']]\n",
    "    compas_subset[\"two_year_recid\"] = compas_subset[\"two_year_recid\"].apply(lambda x: -1 if x==0 else 1)\n",
    "    #ecnoding Caucasian race is 0, African American is 1\n",
    "    compas_subset = compas_subset[(compas_subset[\"race\"]=='Caucasian') |(compas_subset[\"race\"]=='African-American') ]\n",
    "    compas_subset[\"race_cat\"] = compas_subset[\"race\"].apply(lambda x: 1 if x == \"Caucasian\" else 0)\n",
    "    compas_subset = compas_subset.drop(columns = \"race\")\n",
    "    #encoding female is 1 and male is 0\n",
    "    compas_subset[\"gender_cat\"] = compas_subset[\"sex\"].apply(lambda x: 1 if x == \"Female\" else 0)\n",
    "    compas_subset = compas_subset.drop(columns = \"sex\")\n",
    "    #encoding 'F' charge degree is 1  \n",
    "    compas_subset[\"charge_cat\"] = compas_subset[\"c_charge_degree\"].apply(lambda x: 1 if x == \"F\" else 0)\n",
    "    compas_subset = compas_subset.drop(columns = \"c_charge_degree\")\n",
    "    #length of stay = jail out - jail in \n",
    "    #Categorize length_stay with 0/1/2\n",
    "    compas_subset[\"length_stay\"] = pd.to_datetime(compas_subset[\"c_jail_out\"]) - pd.to_datetime(compas_subset['c_jail_in'])\n",
    "    compas_subset[\"length_stay\"] = compas_subset[\"length_stay\"].apply(lambda x: x.days)\n",
    "    compas_subset = compas_subset.drop(columns = [\"c_jail_in\",\"c_jail_out\"])\n",
    "    compas_subset['length_stay'] = compas_subset[\"length_stay\"].apply(lambda x: 0 if x <= 7 else x)\n",
    "    compas_subset['length_stay'] = compas_subset[\"length_stay\"].apply(lambda x: 1 if 7< x <= 90 else x)\n",
    "    compas_subset['length_stay'] = compas_subset[\"length_stay\"].apply(lambda x: 2 if x > 90 else x)\n",
    "    #Categorize priors count into 0/1/2\n",
    "    compas_subset[\"priors_count\"] = compas_subset[\"priors_count\"].apply(lambda x: 0 if x==0 else x)\n",
    "    compas_subset[\"priors_count\"] = compas_subset[\"priors_count\"].apply(lambda x: 1 if (1<=x<=3) else x)\n",
    "    compas_subset[\"priors_count\"] = compas_subset[\"priors_count\"].apply(lambda x: 2 if x>3 else x)\n",
    "    #encoding age_cat  as dummies\n",
    "    dummies = pd.get_dummies(compas_subset[\"age_cat\"])\n",
    "    compas_subset = pd.merge(compas_subset, dummies, left_index = True, right_index = True)\n",
    "    compas_subset = compas_subset.drop(columns = [\"age_cat\",\"age\"])\n",
    "    \n",
    "    compas_subset = compas_subset.dropna()\n",
    "    y_label = compas_subset[\"two_year_recid\"]\n",
    "    protected_attribute = compas_subset[\"race_cat\"]\n",
    "    df = compas_subset.drop(columns=[\"two_year_recid\",\"race_cat\"])\n",
    "\n",
    "    y_label, protected_attr, df = shuffle(y_label, protected_attribute, df, random_state = 0)\n",
    "\n",
    "    return y_label.to_numpy(), protected_attr.to_numpy(), df.to_numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "853d0de7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def accuracy(w, x, y):\n",
    "  shape = x.shape[1]\n",
    "  pred = np.dot(x, w.reshape(shape,1))\n",
    "  pred_prob = 1/(1+ 2.718**(-pred))\n",
    "  \n",
    "  pred_prob[pred_prob>=0.5] = 1\n",
    "  pred_prob[pred_prob<0.5] = -1\n",
    "\n",
    "  matches = np.where(pred_prob== y.reshape(pred_prob.shape))\n",
    "\n",
    "  return (matches[0].shape[0]/pred_prob.shape[0]), pred_prob\n",
    "\n",
    "#Define p% rule ratio \n",
    "def p_rule(race_var, predicted_y):\n",
    "  \n",
    "  not_protected = np.where(race_var != 1)[0]\n",
    "  protected = np.where(race_var == 1)[0] \n",
    "\n",
    "  protected_preds = np.where(predicted_y[protected] == 1)\n",
    "  nonpro_preds = np.where(predicted_y[not_protected] == 1)\n",
    "  protected_perc = (protected_preds[0].shape[0]/protected.shape[0]) \n",
    "  nonpro_perc = (nonpro_preds[0].shape[0]/not_protected.shape[0])\n",
    "\n",
    "  perc_ratio = protected_perc/nonpro_perc\n",
    "\n",
    "  return perc_ratio, protected_perc, nonpro_perc\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3f52e4cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/fk/z7v3jbsd74q31y7nyk6xvmj80000gn/T/ipykernel_3302/1396295897.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  compas_subset[\"two_year_recid\"] = compas_subset[\"two_year_recid\"].apply(lambda x: -1 if x==0 else 1)\n",
      "/var/folders/fk/z7v3jbsd74q31y7nyk6xvmj80000gn/T/ipykernel_3302/1396295897.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  compas_subset[\"race_cat\"] = compas_subset[\"race\"].apply(lambda x: 1 if x == \"Caucasian\" else 0)\n"
     ]
    }
   ],
   "source": [
    "y_label, protected_attr, X =  processing_compas(compas)\n",
    "\n",
    "train_index = int(len(X)*.80)\n",
    "x_train, y_train, race_train = X[:train_index], y_label[:train_index], protected_attr[:train_index]\n",
    "x_test, y_test, race_test = X[train_index:], y_label[train_index:],protected_attr[train_index:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9b7a078d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic Regression Accuracy: 0.6642011834319527\n",
      "P%-rule: (0.5974526902979804, 0.32718651211801897, 0.547635850388144)\n"
     ]
    }
   ],
   "source": [
    "clf = LogisticRegression(random_state=0).fit(x_train, y_train)\n",
    "print(f\"Logistic Regression Accuracy: {clf.score(x_train, y_train)}\")\n",
    "print(f\"P%-rule: {p_rule(race_train, clf.predict(x_train))}\")\n",
    "coeff = clf.coef_\n",
    "intercept = clf.intercept_\n",
    "optimal_loss = log_loss(y_train, clf.predict_proba(x_train))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "81840cef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic Regression Accuracy: 0.661876584953508\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(0.6573326771653544, 0.35625, 0.5419630156472262)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(f\"Logistic Regression Accuracy: {clf.score(x_test, y_test)}\")\n",
    "p_rule(race_test, clf.predict(x_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ced565d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#reshaping arrays \n",
    "#and then calcualte distribution from decision boundary \n",
    "\n",
    "ind = x_train.shape[0]\n",
    "ind_test = x_test.shape[0] \n",
    "\n",
    "lift = np.ones(ind).reshape(ind, 1)\n",
    "lift_test = np.ones(ind_test).reshape(ind_test, 1)\n",
    "x_test =  np.concatenate((x_test, lift_test), axis = 1)\n",
    "x_train = np.concatenate((x_train, lift), axis = 1)\n",
    "\n",
    "optimal_weights_compas = np.concatenate((coeff, intercept.reshape(1,1)), axis = 1)"
   ]
  },
  {
   "attachments": {
    "%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.29.45.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "b0572e8c",
   "metadata": {},
   "source": [
    "**Logistic regression**\n",
    "![%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.29.45.png](attachment:%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.29.45.png)"
   ]
  },
  {
   "attachments": {
    "%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.36.19.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "60666d67",
   "metadata": {},
   "source": [
    "**Maximizing Fairness Under Accuracy Constraints**\n",
    "![%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.36.19.png](attachment:%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.36.19.png)"
   ]
  },
  {
   "attachments": {
    "%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.43.08.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "de0a8110",
   "metadata": {},
   "source": [
    "**Fine-Grained Accuracy Constraints**\n",
    "![%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.43.08.png](attachment:%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202022-11-29%20%E4%B8%8B%E5%8D%883.43.08.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ec078571",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "#creating Constraints for optimization \n",
    "def logisitc_loss(weights, X, y):\n",
    "  \n",
    "  shape = x_train.shape[1]\n",
    "  dp = np.dot(X, weights.reshape(shape,1))\n",
    "  dp = dp.astype(np.float64)\n",
    "  pred_prob = 1/(1+ 2.718**(-dp))\n",
    "\n",
    "  pred_classes = np.concatenate((1-pred_prob, pred_prob), axis = 1)\n",
    "  loss = log_loss(y, pred_classes)\n",
    "\n",
    "  return loss \n",
    "#constraint1: Maximizing Fairness Under Accuracy Constraints\n",
    "def constraint1(weights, x, y, gamma):\n",
    "  \n",
    "  upd_loss = logisitc_loss(weights, x, y)\n",
    "\n",
    "  return (1+gamma)*optimal_loss - upd_loss \n",
    "\n",
    "#Optmization function to minimize \n",
    "def opt_function(w, x, protected_var):\n",
    "  \n",
    "  dist_bound = np.dot(w, x_train.T)\n",
    "  protected_cov = (protected_var - np.mean(protected_var)) * dist_bound\n",
    "  \n",
    "  return float(abs(sum(protected_cov))) / float(x_train.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd052c1a",
   "metadata": {},
   "source": [
    "- reference: https://towardsdatascience.com/optimization-with-scipy-and-application-ideas-to-machine-learning-81d39c7938b8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ad4899fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Run a single optimization with a defined Gamma \n",
    "def run_optimization(x_train, y_train, x_test, y_test, protected_attr, protected_attr_test, gamma, optimal_weights):\n",
    "    constraints = []\n",
    "    cons = {'type':'ineq', 'fun': constraint1, 'args': (x_train, y_train, gamma)}\n",
    "\n",
    "    result = optimize.minimize(opt_function,\n",
    "                               x0=optimal_weights,\n",
    "                               args= (x_train,protected_attr),\n",
    "                               method='SLSQP',\n",
    "                               constraints=cons,\n",
    "                               options={'maxiter':10000})\n",
    "    \n",
    "    accuracy_train, pred_y = accuracy(result.x, x_train, y_train)\n",
    "    p_rule_val, prot_perc, nonp_perc = p_rule(protected_attr, pred_y)\n",
    "    \n",
    "    accuracy_test, y_pred_test = accuracy(result.x, x_test, y_test)\n",
    "    p_rule_val_test, prot_perc_test, nonp_perc_test = p_rule(protected_attr_test, y_pred_test)\n",
    "    \n",
    "    print(f\"Accuracy for gamma {gamma}: {accuracy_train}\")\n",
    "    print(f\"P Rule Value: {p_rule_val}\")\n",
    "    print (f\"Perc of protected vs non protected in positive class: {prot_perc}: {nonp_perc}\")\n",
    "    \n",
    "    return accuracy_train,pred_y, p_rule_val, prot_perc, nonp_perc, accuracy_test, p_rule_val_test, prot_perc_test, nonp_perc_test \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bb986e1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Run multiple optimizations for multiple gammas values\n",
    "def run_mult_optmizations(x_train, y_train, x_test,y_test, protected_attr, protected_attr_test, optimal_weights, gamma_list):\n",
    "    \n",
    "    accuracy_list, p_val_list, prot_perc_list, nonpro_perc_list = [],[],[],[]\n",
    "    accuracy_list_test, p_val_list_test, prot_perc_list_test, nonpro_perc_list_test = [],[],[],[]\n",
    "    for g in gamma_list: \n",
    "        (accuracy_train, pred_y, p_rule_val, prot_perc, nonp_perc,\n",
    "        accuracy_test, p_rule_val_test, prot_perc_test, nonp_perc_test) = run_optimization(x_train, \n",
    "                                                                                          y_train,\n",
    "                                                                                          x_test,\n",
    "                                                                                          y_test,\n",
    "                                                                                          protected_attr, \n",
    "                                                                                          protected_attr_test,\n",
    "                                                                                          g, \n",
    "                                                                                          optimal_weights)\n",
    "        accuracy_list.append(accuracy_train)\n",
    "        p_val_list.append(p_rule_val)\n",
    "        prot_perc_list.append(prot_perc)\n",
    "        nonpro_perc_list.append(nonp_perc)\n",
    "        \n",
    "        accuracy_list_test.append(accuracy_test)\n",
    "        p_val_list_test.append(p_rule_val_test)\n",
    "        prot_perc_list_test.append(prot_perc_test)\n",
    "        nonpro_perc_list_test.append(nonp_perc_test)\n",
    "        \n",
    "    return accuracy_list, p_val_list, prot_perc_list, nonpro_perc_list,accuracy_list_test, p_val_list_test, prot_perc_list_test, nonpro_perc_list_test\n",
    "        \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2c42ca8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Run optimization for different gamma values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "87ab797e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy for gamma 0.05: 0.6299661876584953\n",
      "P Rule Value: 0.6802906157982332\n",
      "Perc of protected vs non protected in positive class: 0.3082191780821918: 0.45306986591390264\n",
      "Accuracy for gamma 0.1: 0.5617075232459848\n",
      "P Rule Value: 0.9035258405977584\n",
      "Perc of protected vs non protected in positive class: 0.2244467860906217: 0.24841213832039521\n",
      "Accuracy for gamma 0.11: 0.5420540997464074\n",
      "P Rule Value: 1.0219080928786552\n",
      "Perc of protected vs non protected in positive class: 0.10168598524762908: 0.0995059985885674\n"
     ]
    }
   ],
   "source": [
    "(compas_acc, compas_p_val_list, compas_protected, compas_nonpro, \n",
    " compas_acc_test, compas_p_val_list_test, compas_protected_test, compas_nonpro_test) = run_mult_optmizations(x_train, \n",
    "                                                                                y_train, \n",
    "                                                                                x_test, \n",
    "                                                                                y_test, \n",
    "                                                                                race_train,\n",
    "                                                                                race_test, \n",
    "                                                                                optimal_weights_compas, \n",
    "                                                                                [0.05,0.1,0.11])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d1b84474",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "fig, ax1 = plt.subplots()\n",
    "\n",
    "ax2 = ax1.twinx()\n",
    "ax1.plot( [0.05,0.1,0.11], compas_acc , 'r-')\n",
    "ax2.plot( [0.05,0.1,0.11], compas_p_val_list, 'k-')\n",
    "\n",
    "ax1.set_xlabel('mutiple gamma Loss Factor')\n",
    "ax1.set_ylabel('Train Accuracy', color='r')\n",
    "ax2.set_ylabel('P% Rule', color='k')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "df3c09cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "fig, ax1 = plt.subplots()\n",
    "\n",
    "ax2 = ax1.twinx()\n",
    "ax1.plot( [0.05,0.1,0.11], compas_acc_test , 'r-')\n",
    "ax2.plot( [0.05,0.1,0.11], compas_p_val_list_test, 'k-')\n",
    "\n",
    "ax1.set_xlabel('mutiple gamma Loss Factor')\n",
    "ax1.set_ylabel('Test Accuracy', color='r')\n",
    "ax2.set_ylabel('P% Rule', color='k')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de5da74f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a55bea8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
